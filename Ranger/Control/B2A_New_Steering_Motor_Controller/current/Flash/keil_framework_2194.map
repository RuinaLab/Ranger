ARM Linker, RVCT4.0 [Build 524] for uVision [Standard]

==============================================================================

Section Cross References

    main.o(.text) refers to hardware_setup.o(.text) for init_hardware
    main.o(.text) refers to software_setup.o(.text) for init_software
    main.o(.text) refers to can_setup.o(.text) for init_can
    main.o(.text) refers to interrupts.o(.text) for init_interrupts
    main.o(.text) refers to printfa.o(i.__0printf) for __2printf
    main.o(.text) refers to async_scheduler.o(.text) for asched_run
    main.o(.text) refers to main.o(.data) for .data
    startup.o(RESET) refers to interrupts.o(.text) for FIQ_Handler
    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    async_scheduler.o(.text) refers to error.o(.text) for error_occurred
    async_scheduler.o(.text) refers to async_scheduler.o(.data) for .data
    error.o(.text) refers to mutex.o(.text) for mutex_check
    error.o(.text) refers to error.o(.bss) for .bss
    error.o(.text) refers to error.o(.data) for .data
    error.o(.data) refers to utility.o(.text) for voidvoid
    utility.o(.text) refers to fscalb.o(.text) for __ARM_scalbnf
    utility.o(.text) refers to ffixi.o(.text) for __aeabi_f2iz
    utility.o(.text) refers to fflti.o(.text) for __aeabi_i2f
    utility.o(.text) refers to error.o(.text) for error_occurred
    utility.o(.text) refers to utility.o(.data) for .data
    utility.o(.data) refers to utility.o(.text) for voidint
    hardware_setup.o(.text) refers to async_scheduler.o(.text) for asched_tick
    software_setup.o(.text) refers to adc_external.o(.text) for adcx_convert_all
    software_setup.o(.text) refers to adc_internal.o(.text) for adci_convert_all
    software_setup.o(.text) refers to can.o(.text) for can_rx_dispatch_all
    software_setup.o(.text) refers to heartbeat.o(.text) for hb_beat
    software_setup.o(.text) refers to mcu_led.o(.text) for mcu_led_update
    software_setup.o(.text) refers to error.o(.text) for error_update
    software_setup.o(.text) refers to motor_controller.o(.text) for mc_compliant_control
    software_setup.o(.text) refers to can_setup.o(.text) for can_transmit_status
    software_setup.o(.text) refers to async_scheduler.o(.text) for asched_init
    software_setup.o(.text) refers to data_nexus.o(.text) for dn_get_steer_angle_raw
    software_setup.o(.text) refers to software_setup.o(.data) for .data
    software_setup.o(.text) refers to software_setup.o(.constdata) for .constdata
    software_setup.o(.text) refers to data_nexus.o(.data) for dn_steer_zero_offset
    software_setup.o(.constdata) refers to software_setup.o(.text) for task_every_row
    software_setup.o(.constdata) refers to can_setup.o(.text) for can_transmit1
    software_setup.o(.constdata) refers to data_nexus.o(.text) for dn_sched_done
    can_setup.o(.text) refers to can_types.o(.text) for can_set_rx_descriptor_fi
    can_setup.o(.text) refers to can.o(.text) for can_rx_set_descriptors
    can_setup.o(.text) refers to can_setup.o(.bss) for .bss
    can_setup.o(.text) refers to data_nexus.o(.text) for dn_rx_timestamp
    can_setup.o(.text) refers to motor_controller.o(.text) for mc_set_command_current
    can_setup.o(.text) refers to async_scheduler.o(.text) for asched_get_timestamp
    can_setup.o(.text) refers to error.o(.text) for error_get_time
    interrupts.o(.text) refers to can.o(.text) for can_rx2_isr
    interrupts.o(.text) refers to adc_external.o(.text) for adcx_isr
    interrupts.o(.text) refers to adc_internal.o(.text) for adci_isr
    interrupts.o(.text) refers to hardware_setup.o(.text) for timer1_isr
    data_nexus.o(.text) refers to adc_external.o(.text) for adcx_get_result
    data_nexus.o(.text) refers to motor_controller.o(.text) for mc_direction_control
    data_nexus.o(.text) refers to error.o(.text) for error_occurred
    data_nexus.o(.text) refers to mcu_led.o(.text) for mcu_led_red_blink
    data_nexus.o(.text) refers to adc_internal.o(.text) for adci_get_result
    data_nexus.o(.text) refers to fflti.o(.text) for __aeabi_i2f
    data_nexus.o(.text) refers to fmul.o(.text) for __aeabi_fmul
    data_nexus.o(.text) refers to utility.o(.text) for linear_to_fixed
    data_nexus.o(.text) refers to can.o(.text) for can_transmit
    data_nexus.o(.text) refers to printfa.o(i.__0sprintf) for __2sprintf
    data_nexus.o(.text) refers to uart_int.o(.text) for uarti_tx_buf
    data_nexus.o(.text) refers to data_nexus.o(.data) for .data
    data_nexus.o(.text) refers to can_setup.o(.bss) for tx_fd_error
    data_nexus.o(.text) refers to data_nexus.o(.bss) for .bss
    data_nexus.o(.text) refers to f2d.o(.text) for __aeabi_f2d
    data_nexus.o(.text) refers to dmul.o(.text) for __aeabi_dmul
    data_nexus.o(.text) refers to d2f.o(.text) for __aeabi_d2f
    data_nexus.o(.text) refers to async_scheduler.o(.text) for asched_set_timestamp
    data_nexus.o(.text) refers to ffltui.o(.text) for __aeabi_ui2f
    retarget.o(.text) refers to uart.o(.text) for sendchar
    heartbeat.o(.text) refers to heartbeat.o(.data) for .data
    heartbeat.o(.data) refers to utility.o(.text) for voidvoid
    mcu_led.o(.text) refers to mcu_led.o(.data) for .data
    adc_internal.o(.text) refers to error.o(.text) for error_occurred
    adc_internal.o(.text) refers to adc_internal.o(.bss) for .bss
    adc_internal.o(.text) refers to adc_internal.o(.data) for .data
    motor_controller.o(.text) refers to utility.o(.text) for float_to_fixed
    motor_controller.o(.text) refers to fmul.o(.text) for __aeabi_fmul
    motor_controller.o(.text) refers to fdiv.o(.text) for __aeabi_fdiv
    motor_controller.o(.text) refers to fadd.o(.text) for __aeabi_frsub
    motor_controller.o(.text) refers to fflti.o(.text) for __aeabi_i2f
    motor_controller.o(.text) refers to error.o(.text) for error_occurred
    motor_controller.o(.text) refers to mcu_led.o(.text) for mcu_led_green_off
    motor_controller.o(.text) refers to motor_controller.o(.bss) for .bss
    motor_controller.o(.text) refers to motor_controller.o(.data) for .data
    uart_int.o(.text) refers to printfa.o(i.__0sprintf) for __2sprintf
    uart_int.o(.text) refers to uart_int.o(.data) for .data
    uart_int.o(.text) refers to uart_int.o(.bss) for .bss
    uart_int.o(.text) refers to f2d.o(.text) for __aeabi_f2d
    adc_external.o(.text) refers to error.o(.text) for error_occurred
    adc_external.o(.text) refers to adc_external.o(.data) for .data
    adc_external.o(.text) refers to adc_external.o(.bss) for .bss
    can.o(.emb_text) refers to can.o(.bss) for can_rx_data
    can.o(.text) refers to can.o(.bss) for .bss
    can.o(.text) refers to can.o(.data) for .data
    can.o(.text) refers to can.o(i.__ARM_common_memcpy1_8_arm) for __ARM_common_memcpy1_8_arm
    can.o(.text) refers to can.o(.emb_text) for can_rx_push
    can.o(.text) refers to error.o(.text) for error_occurred_irq
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7.o(.ARM.Collect$$$$00000007) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to retarget.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to retarget.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to retarget.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to retarget.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to retarget.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to retarget.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to retarget.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to retarget.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to retarget.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to retarget.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to retarget.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to retarget.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to retarget.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to retarget.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to retarget.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to retarget.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to retarget.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to retarget.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to retarget.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to retarget.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to retarget.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to retarget.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to retarget.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to retarget.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to retarget.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to retarget.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to retarget.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to retarget.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to retarget.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to retarget.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to retarget.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to retarget.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to retarget.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to retarget.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to retarget.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to retarget.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to retarget.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to retarget.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to retarget.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to retarget.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to retarget.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to retarget.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to retarget.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to retarget.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to retarget.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to retarget.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to retarget.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to retarget.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to retarget.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to retarget.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to retarget.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to retarget.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to retarget.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to retarget.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to retarget.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to retarget.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to retarget.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to retarget.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget.o(.text) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget.o(.text) for fputc
    printfa.o(i.__0printf) refers to retarget.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget.o(.text) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget.o(.text) for fputc
    printfa.o(i.__0vprintf) refers to retarget.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fscalb.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup.o(STACK) for __initial_sp
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry7.o(.ARM.Collect$$$$00000007) refers to main.o(.text) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.data), (4 bytes).
    Removing startup.o(HEAP), (0 bytes).

2 unused section(s) (total 4 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      276  startup.o(RESET)
    ../../../cmprslib/zerorunl2.c            0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../../microlib/d2f.c                     0x00000000   Number         0  d2f.o ABSOLUTE
    ../../microlib/division.c                0x00000000   Number         0  uidiv.o ABSOLUTE
    ../../microlib/division.c                0x00000000   Number         0  uldiv.o ABSOLUTE
    ../../microlib/f2d.c                     0x00000000   Number         0  f2d.o ABSOLUTE
    ../../microlib/fpadd.c                   0x00000000   Number         0  fadd.o ABSOLUTE
    ../../microlib/fpadd.c                   0x00000000   Number         0  dadd.o ABSOLUTE
    ../../microlib/fpdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../../microlib/fpdiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../../microlib/fpepilogue.c              0x00000000   Number         0  depilogue.o ABSOLUTE
    ../../microlib/fpepilogue.c              0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../../microlib/fpfix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../../microlib/fpfix.c                   0x00000000   Number         0  dfixul.o ABSOLUTE
    ../../microlib/fpflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../../microlib/fpflt.c                   0x00000000   Number         0  ffltui.o ABSOLUTE
    ../../microlib/fpmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../../microlib/fpmul.c                   0x00000000   Number         0  fmul.o ABSOLUTE
    ../../microlib/fpscalb.c                 0x00000000   Number         0  fscalb.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry2.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry5.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry7.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llushr.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llshl.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf5.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf7.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printfb.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf6.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf3.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf8.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printfa.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf2.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf4.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf1.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf0.o ABSOLUTE
    ../../microlib/printf/stubs.s            0x00000000   Number         0  stubs.o ABSOLUTE
    ../../microlib/stubs.s                   0x00000000   Number         0  useno.o ABSOLUTE
    ../../microlib/stubs.s                   0x00000000   Number         0  iusefp.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_adc_external\adc_external.c 0x00000000   Number         0  adc_external.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_adc_internal\adc_internal.c 0x00000000   Number         0  adc_internal.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_can\can.c 0x00000000   Number         0  can.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_can\can_types.c 0x00000000   Number         0  can_types.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_heartbeat\heartbeat.c 0x00000000   Number         0  heartbeat.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_mcu_led\mcu_led.c 0x00000000   Number         0  mcu_led.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_motor_controller\motor_controller.c 0x00000000   Number         0  motor_controller.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_uart\UART.c 0x00000000   Number         0  uart.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\mod_uart_int\uart_int.c 0x00000000   Number         0  uart_int.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\ranger_os_v0.1\async_scheduler.c 0x00000000   Number         0  async_scheduler.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\ranger_os_v0.1\error.c 0x00000000   Number         0  error.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\ranger_os_v0.1\mutex.c 0x00000000   Number         0  mutex.o ABSOLUTE
    ..\..\..\..\Robot_Nervous_System\LPC2xxx_Modules\ranger_os_v0.1\utility.c 0x00000000   Number         0  utility.o ABSOLUTE
    ..\\..\\..\\..\\Robot_Nervous_System\\LPC2xxx_Modules\\mod_can\\can.c 0x00000000   Number         0  can.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    src\Retarget.c                           0x00000000   Number         0  retarget.o ABSOLUTE
    src\Startup.s                            0x00000000   Number         0  startup.o ABSOLUTE
    src\can_setup.c                          0x00000000   Number         0  can_setup.o ABSOLUTE
    src\data_nexus.c                         0x00000000   Number         0  data_nexus.o ABSOLUTE
    src\hardware_setup.c                     0x00000000   Number         0  hardware_setup.o ABSOLUTE
    src\interrupts.c                         0x00000000   Number         0  interrupts.o ABSOLUTE
    src\main.c                               0x00000000   Number         0  main.o ABSOLUTE
    src\software_setup.c                     0x00000000   Number         0  software_setup.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    SWI_Handler                              0x00000044   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000114   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000114   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000118   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000007                 0x0000011c   Section       12  entry7.o(.ARM.Collect$$$$00000007)
    .ARM.Collect$$$$00002712                 0x00000128   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x00000128   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .emb_text                                0x0000012c   Section       76  can.o(.emb_text)
    .text                                    0x00000178   Section      120  main.o(.text)
    .text                                    0x000001f0   Section      312  async_scheduler.o(.text)
    .text                                    0x00000328   Section     1024  error.o(.text)
    .text                                    0x00000728   Section       44  mutex.o(.text)
    .text                                    0x00000754   Section      332  utility.o(.text)
    .text                                    0x000008a0   Section     1128  hardware_setup.o(.text)
    .text                                    0x00000d08   Section      464  software_setup.o(.text)
    .text                                    0x00000ed8   Section      612  can_setup.o(.text)
    .text                                    0x0000113c   Section      180  interrupts.o(.text)
    .text                                    0x000011f0   Section      780  data_nexus.o(.text)
    .text                                    0x000014fc   Section       20  retarget.o(.text)
    .text                                    0x00001510   Section      140  heartbeat.o(.text)
    .text                                    0x0000159c   Section      608  mcu_led.o(.text)
    .text                                    0x000017fc   Section      860  adc_internal.o(.text)
    .text                                    0x00001b58   Section     2404  motor_controller.o(.text)
    .text                                    0x000024bc   Section       88  uart.o(.text)
    .text                                    0x00002514   Section      708  uart_int.o(.text)
    .text                                    0x000027d8   Section     1144  adc_external.o(.text)
    .text                                    0x00002c50   Section     5012  can.o(.text)
    __switch$$                               0x000036c0   ARM Code       0  can.o(.text)
    __switch$$                               0x000038ec   ARM Code       0  can.o(.text)
    .text                                    0x00003fe4   Section      740  can_types.o(.text)
    .text                                    0x000042c8   Section      232  fadd.o(.text)
    _float_addcore                           0x000042c8   ARM Code     164  fadd.o(.text)
    .text                                    0x000043b0   Section      136  fmul.o(.text)
    .text                                    0x00004438   Section      140  fdiv.o(.text)
    .text                                    0x000044c4   Section       12  fscalb.o(.text)
    .text                                    0x000044d0   Section      360  dmul.o(.text)
    .text                                    0x00004638   Section       28  fflti.o(.text)
    .text                                    0x00004654   Section       16  ffltui.o(.text)
    .text                                    0x00004664   Section       64  ffixi.o(.text)
    .text                                    0x000046a4   Section       56  f2d.o(.text)
    .text                                    0x000046dc   Section       92  d2f.o(.text)
    .text                                    0x00004738   Section       60  uidiv.o(.text)
    .text                                    0x00004774   Section      144  uldiv.o(.text)
    .text                                    0x00004804   Section      108  fepilogue.o(.text)
    .text                                    0x00004804   Section        0  iusefp.o(.text)
    .text                                    0x00004870   Section      292  depilogue.o(.text)
    .text                                    0x00004994   Section      668  dadd.o(.text)
    _double_addcore                          0x00004994   ARM Code     428  dadd.o(.text)
    .text                                    0x00004c30   Section      380  ddiv.o(.text)
    .text                                    0x00004dac   Section       76  dfixul.o(.text)
    .text                                    0x00004df8   Section      112  cdrcmple.o(.text)
    .text                                    0x00004e68   Section       48  init.o(.text)
    .text                                    0x00004e98   Section       40  llshl.o(.text)
    .text                                    0x00004ec0   Section       36  llushr.o(.text)
    .text                                    0x00004ee4   Section      112  __dczerorl2.o(.text)
    i.__0printf                              0x00004f54   Section       44  printfa.o(i.__0printf)
    i.__0sprintf                             0x00004f80   Section       60  printfa.o(i.__0sprintf)
    i.__ARM_common_memcpy1_8_arm             0x00004fbc   Section       68  can.o(i.__ARM_common_memcpy1_8_arm)
    i.__scatterload_copy                     0x00005000   Section       24  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00005018   Section        4  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x0000501c   Section       24  handlers.o(i.__scatterload_zeroinit)
    i._fp_digits                             0x00005034   Section      612  printfa.o(i._fp_digits)
    _fp_digits                               0x00005034   ARM Code     612  printfa.o(i._fp_digits)
    i._printf_core                           0x00005298   Section     2724  printfa.o(i._printf_core)
    _printf_core                             0x00005298   ARM Code    2724  printfa.o(i._printf_core)
    i._printf_post_padding                   0x00005d3c   Section       68  printfa.o(i._printf_post_padding)
    _printf_post_padding                     0x00005d3c   ARM Code      68  printfa.o(i._printf_post_padding)
    i._printf_pre_padding                    0x00005d80   Section       80  printfa.o(i._printf_pre_padding)
    _printf_pre_padding                      0x00005d80   ARM Code      80  printfa.o(i._printf_pre_padding)
    i._sputc                                 0x00005dd0   Section       20  printfa.o(i._sputc)
    _sputc                                   0x00005dd0   ARM Code      20  printfa.o(i._sputc)
    .constdata                               0x00005de4   Section       68  software_setup.o(.constdata)
    .data                                    0x40000000   Section        4  main.o(.data)
    .data                                    0x40000004   Section       32  async_scheduler.o(.data)
    asched_completion                        0x40000004   Data           1  async_scheduler.o(.data)
    asched_schedule                          0x40000008   Data           4  async_scheduler.o(.data)
    asched_divider                           0x4000000c   Data           4  async_scheduler.o(.data)
    asched_div_counter                       0x40000010   Data           4  async_scheduler.o(.data)
    asched_slot_start_index                  0x40000014   Data           4  async_scheduler.o(.data)
    asched_saved_slot_start_index            0x40000018   Data           4  async_scheduler.o(.data)
    asched_next_task_index                   0x4000001c   Data           4  async_scheduler.o(.data)
    asched_timestamp                         0x40000020   Data           4  async_scheduler.o(.data)
    .data                                    0x40000024   Section       32  error.o(.data)
    er_board_id                              0x40000024   Data           1  error.o(.data)
    er_transmit                              0x40000028   Data           4  error.o(.data)
    er_get_timestamp                         0x4000002c   Data           4  error.o(.data)
    er_is_init                               0x40000030   Data           4  error.o(.data)
    er_active                                0x40000034   Data           4  error.o(.data)
    .data                                    0x40000044   Section        8  utility.o(.data)
    .data                                    0x4000004c   Section        2  software_setup.o(.data)
    i                                        0x4000004c   Data           2  software_setup.o(.data)
    .data                                    0x40000050   Section       52  data_nexus.o(.data)
    steer_filter_coeff                       0x4000006c   Data           4  data_nexus.o(.data)
    ang                                      0x4000007c   Data           4  data_nexus.o(.data)
    .data                                    0x40000084   Section        4  retarget.o(.data)
    .data                                    0x40000088   Section       24  heartbeat.o(.data)
    hb_state                                 0x40000088   Data           4  heartbeat.o(.data)
    hb_period                                0x4000008c   Data           4  heartbeat.o(.data)
    hb_function                              0x40000090   Data           4  heartbeat.o(.data)
    hb_get_timestamp                         0x40000094   Data           4  heartbeat.o(.data)
    hb_prescale                              0x40000098   Data           4  heartbeat.o(.data)
    hb_count                                 0x4000009c   Data           4  heartbeat.o(.data)
    .data                                    0x400000a0   Section       12  mcu_led.o(.data)
    mcu_led_green_count                      0x400000a0   Data           4  mcu_led.o(.data)
    mcu_led_red_count                        0x400000a4   Data           4  mcu_led.o(.data)
    mcu_led_blue_count                       0x400000a8   Data           4  mcu_led.o(.data)
    .data                                    0x400000ac   Section       16  adc_internal.o(.data)
    adci_status                              0x400000ac   Data           1  adc_internal.o(.data)
    adci_sched_index                         0x400000b0   Data           4  adc_internal.o(.data)
    adci_sched_size                          0x400000b4   Data           4  adc_internal.o(.data)
    adci_sched                               0x400000b8   Data           4  adc_internal.o(.data)
    .data                                    0x400000bc   Section       92  motor_controller.o(.data)
    start_count                              0x400000bc   Data           1  motor_controller.o(.data)
    mc_pwm                                   0x400000c0   Data           4  motor_controller.o(.data)
    mc_target_current                        0x400000c4   Data           4  motor_controller.o(.data)
    mc_c1                                    0x400000c8   Data           4  motor_controller.o(.data)
    mc_new_c1                                0x400000cc   Data           4  motor_controller.o(.data)
    mc_c2                                    0x400000d0   Data           4  motor_controller.o(.data)
    mc_new_c2                                0x400000d4   Data           4  motor_controller.o(.data)
    mc_command_current                       0x400000d8   Data           4  motor_controller.o(.data)
    mc_therm_off                             0x400000dc   Data           4  motor_controller.o(.data)
    mc_mech_off                              0x400000e0   Data           4  motor_controller.o(.data)
    mc_off                                   0x400000e4   Data           4  motor_controller.o(.data)
    mc_sleep                                 0x400000e8   Data           4  motor_controller.o(.data)
    mc_shutdown                              0x400000ec   Data           4  motor_controller.o(.data)
    mc_positive                              0x400000f0   Data           4  motor_controller.o(.data)
    mc_negative                              0x400000f4   Data           4  motor_controller.o(.data)
    current_error                            0x400000f8   Data           4  motor_controller.o(.data)
    multiplier                               0x400000fc   Data           4  motor_controller.o(.data)
    multiplier                               0x40000100   Data           4  motor_controller.o(.data)
    a                                        0x40000104   Data           4  motor_controller.o(.data)
    mc_phase                                 0x40000108   Data           4  motor_controller.o(.data)
    mc_save_stiff                            0x4000010c   Data           4  motor_controller.o(.data)
    mc_save_damp                             0x40000110   Data           4  motor_controller.o(.data)
    mc_save_comm                             0x40000114   Data           4  motor_controller.o(.data)
    .data                                    0x40000118   Section       24  uart_int.o(.data)
    uarti_strlen                             0x40000118   Data           4  uart_int.o(.data)
    uarti_out_next_idx                       0x4000011c   Data           4  uart_int.o(.data)
    uarti_out_len                            0x40000120   Data           4  uart_int.o(.data)
    uarti_out_stall                          0x40000124   Data           4  uart_int.o(.data)
    uarti_out_buf                            0x40000128   Data           4  uart_int.o(.data)
    uarti_out_callback                       0x4000012c   Data           4  uart_int.o(.data)
    .data                                    0x40000130   Section       20  adc_external.o(.data)
    adcx_index                               0x40000130   Data           4  adc_external.o(.data)
    adcx_num_configs                         0x40000134   Data           4  adc_external.o(.data)
    adcx_status                              0x40000138   Data           4  adc_external.o(.data)
    adcx_wait_count                          0x4000013c   Data           4  adc_external.o(.data)
    adcx_count                               0x40000140   Data           4  adc_external.o(.data)
    .data                                    0x40000144   Section       60  can.o(.data)
    .bss                                     0x40000180   Section      536  error.o(.bss)
    er_buffer                                0x40000180   Data         520  error.o(.bss)
    er_flags                                 0x40000388   Data          16  error.o(.bss)
    .bss                                     0x40000398   Section      660  can_setup.o(.bss)
    .bss                                     0x4000062c   Section       40  data_nexus.o(.bss)
    .bss                                     0x40000654   Section       48  adc_internal.o(.bss)
    adci_filters                             0x40000654   Data          48  adc_internal.o(.bss)
    .bss                                     0x40000684   Section       92  motor_controller.o(.bss)
    mc_data                                  0x40000684   Data          92  motor_controller.o(.bss)
    .bss                                     0x400006e0   Section      100  uart_int.o(.bss)
    uarti_str                                0x400006e0   Data         100  uart_int.o(.bss)
    .bss                                     0x40000744   Section       64  adc_external.o(.bss)
    adcx_configs                             0x40000744   Data          32  adc_external.o(.bss)
    adcx_results                             0x40000764   Data          32  adc_external.o(.bss)
    .bss                                     0x40000784   Section     1568  can.o(.bss)
    STACK                                    0x40000da8   Section     2056  startup.o(STACK)
    Stack_Top                                0x400015b0   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __use_no_errno                           0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_exception_handling              0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_fp                              0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_heap                            0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_heap_region                     0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_semihosting                     0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_semihosting_swi                 0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_signal_handling                 0x00000000   Number         0  useno.o ABSOLUTE
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    Reset_Handler                            0x00000054   ARM Code       0  startup.o(RESET)
    __main                                   0x00000114   ARM Code       0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000114   ARM Code       0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000118   ARM Code       0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x0000011c   ARM Code       0  entry5.o(.ARM.Collect$$$$00000004)
    _main_init                               0x0000011c   ARM Code       0  entry7.o(.ARM.Collect$$$$00000007)
    can_rx_push                              0x0000012c   ARM Code      72  can.o(.emb_text)
    init                                     0x00000178   ARM Code      28  main.o(.text)
    main                                     0x00000194   ARM Code      92  main.o(.text)
    asched_init                              0x000001f0   ARM Code      40  async_scheduler.o(.text)
    asched_tick                              0x00000218   ARM Code     144  async_scheduler.o(.text)
    asched_set_timestamp                     0x000002a8   ARM Code      12  async_scheduler.o(.text)
    asched_run                               0x000002b4   ARM Code     100  async_scheduler.o(.text)
    asched_get_timestamp                     0x00000318   ARM Code      12  async_scheduler.o(.text)
    error_init                               0x00000328   ARM Code      48  error.o(.text)
    error_occurred                           0x00000358   ARM Code      92  error.o(.text)
    error_occurred_irq                       0x000003b4   ARM Code      92  error.o(.text)
    error_occurred_fiq                       0x00000410   ARM Code      92  error.o(.text)
    error_update                             0x0000046c   ARM Code     388  error.o(.text)
    error_get_time                           0x000005f0   ARM Code      32  error.o(.text)
    error_get_info                           0x00000610   ARM Code      56  error.o(.text)
    error_get_board                          0x00000648   ARM Code      12  error.o(.text)
    error_get_id                             0x00000654   ARM Code      28  error.o(.text)
    error_get_frequency                      0x00000670   ARM Code      28  error.o(.text)
    error_send_next                          0x0000068c   ARM Code     132  error.o(.text)
    mutex_check                              0x00000728   ARM Code       8  mutex.o(.text)
    mutex_lock                               0x00000730   ARM Code      24  mutex.o(.text)
    mutex_unlock                             0x00000748   ARM Code      12  mutex.o(.text)
    float_to_fixed                           0x00000754   ARM Code      20  utility.o(.text)
    int_to_fixed                             0x00000768   ARM Code       8  utility.o(.text)
    fixed_to_float                           0x00000770   ARM Code      20  utility.o(.text)
    fixed_to_int                             0x00000784   ARM Code       8  utility.o(.text)
    fixed_mult                               0x0000078c   ARM Code      16  utility.o(.text)
    fixed_mult_to_long                       0x0000079c   ARM Code      20  utility.o(.text)
    linear_to_fixed                          0x000007b0   ARM Code      52  utility.o(.text)
    fixed_abs                                0x000007e4   ARM Code      12  utility.o(.text)
    voidvoid                                 0x000007f0   ARM Code       8  utility.o(.text)
    voidvoid_noerror                         0x000007f8   ARM Code       4  utility.o(.text)
    voidint                                  0x000007fc   ARM Code       8  utility.o(.text)
    voidint_noerror                          0x00000804   ARM Code       4  utility.o(.text)
    floatvoid                                0x00000808   ARM Code      20  utility.o(.text)
    floatvoid_noerror                        0x0000081c   ARM Code       8  utility.o(.text)
    intvoid                                  0x00000824   ARM Code      20  utility.o(.text)
    intvoid_noerror                          0x00000838   ARM Code       8  utility.o(.text)
    tic_toc_init                             0x00000840   ARM Code      12  utility.o(.text)
    tic                                      0x0000084c   ARM Code      24  utility.o(.text)
    toc                                      0x00000864   ARM Code      56  utility.o(.text)
    init_hardware                            0x000008a0   ARM Code    1084  hardware_setup.o(.text)
    timer1_isr                               0x00000cdc   ARM Code      40  hardware_setup.o(.text)
    task_every_row                           0x00000d08   ARM Code      44  software_setup.o(.text)
    run_occasionally                         0x00000d34   ARM Code      96  software_setup.o(.text)
    init_software                            0x00000d94   ARM Code     248  software_setup.o(.text)
    init_values                              0x00000e8c   ARM Code      28  software_setup.o(.text)
    init_can                                 0x00000ed8   ARM Code     464  can_setup.o(.text)
    can_transmit1                            0x000010a8   ARM Code       8  can_setup.o(.text)
    can_transmit2                            0x000010b0   ARM Code       8  can_setup.o(.text)
    can_transmit3                            0x000010b8   ARM Code       8  can_setup.o(.text)
    can_transmit4                            0x000010c0   ARM Code       8  can_setup.o(.text)
    can_transmit5                            0x000010c8   ARM Code       8  can_setup.o(.text)
    can_transmit_status                      0x000010d0   ARM Code       8  can_setup.o(.text)
    init_interrupts                          0x0000113c   ARM Code     156  interrupts.o(.text)
    FIQ_Handler                              0x000011d8   ARM Code       4  interrupts.o(.text)
    dn_get_steer_angle_raw                   0x000011f0   ARM Code       8  data_nexus.o(.text)
    dn_safety                                0x000011f8   ARM Code     136  data_nexus.o(.text)
    dn_blue_heartbeat                        0x00001280   ARM Code       8  data_nexus.o(.text)
    dn_green_heartbeat                       0x00001288   ARM Code       4  data_nexus.o(.text)
    dn_red_heartbeat                         0x0000128c   ARM Code       4  data_nexus.o(.text)
    dn_get_battery_voltage                   0x00001290   ARM Code      40  data_nexus.o(.text)
    dn_get_raw_battery_voltage               0x000012b8   ARM Code      32  data_nexus.o(.text)
    dn_get_hbridge_raw_temp                  0x000012d8   ARM Code       8  data_nexus.o(.text)
    dn_get_raw_motor_current                 0x000012e0   ARM Code      36  data_nexus.o(.text)
    dn_get_motor_current                     0x00001304   ARM Code      48  data_nexus.o(.text)
    dn_get_battery_current                   0x00001334   ARM Code      40  data_nexus.o(.text)
    dn_get_raw_battery_current               0x0000135c   ARM Code      36  data_nexus.o(.text)
    dn_get_batt_power                        0x00001380   ARM Code      76  data_nexus.o(.text)
    dn_error_transmit                        0x000013cc   ARM Code       8  data_nexus.o(.text)
    dn_error_print                           0x000013d4   ARM Code      72  data_nexus.o(.text)
    dn_get_steer_angle                       0x0000141c   ARM Code      80  data_nexus.o(.text)
    dn_rx_timestamp                          0x0000146c   ARM Code       4  data_nexus.o(.text)
    dn_get_status                            0x00001470   ARM Code       8  data_nexus.o(.text)
    dn_sched_done                            0x00001478   ARM Code      76  data_nexus.o(.text)
    dn_get_execution_time                    0x000014c4   ARM Code      28  data_nexus.o(.text)
    dn_get_max_execution_time                0x000014e0   ARM Code      28  data_nexus.o(.text)
    fputc                                    0x000014fc   ARM Code       4  retarget.o(.text)
    ferror                                   0x00001500   ARM Code       8  retarget.o(.text)
    _ttywrch                                 0x00001508   ARM Code       4  retarget.o(.text)
    _sys_exit                                0x0000150c   ARM Code       4  retarget.o(.text)
    hb_init                                  0x00001510   ARM Code      12  heartbeat.o(.text)
    hb_beat                                  0x0000151c   ARM Code      72  heartbeat.o(.text)
    hb_get_count                             0x00001564   ARM Code      52  heartbeat.o(.text)
    mcu_led_init                             0x0000159c   ARM Code      24  mcu_led.o(.text)
    mcu_led_red_off                          0x000015b4   ARM Code      20  mcu_led.o(.text)
    mcu_led_blue_off                         0x000015c8   ARM Code      20  mcu_led.o(.text)
    mcu_led_green_off                        0x000015dc   ARM Code      20  mcu_led.o(.text)
    mcu_led_update                           0x000015f0   ARM Code     124  mcu_led.o(.text)
    mcu_led_green_on                         0x0000166c   ARM Code      20  mcu_led.o(.text)
    mcu_led_green_blink                      0x00001680   ARM Code      32  mcu_led.o(.text)
    mcu_led_blue_on                          0x000016a0   ARM Code      20  mcu_led.o(.text)
    mcu_led_blue_blink                       0x000016b4   ARM Code      32  mcu_led.o(.text)
    mcu_led_red_on                           0x000016d4   ARM Code      20  mcu_led.o(.text)
    mcu_led_red_blink                        0x000016e8   ARM Code      32  mcu_led.o(.text)
    mcu_led_green_toggle                     0x00001708   ARM Code      32  mcu_led.o(.text)
    mcu_led_red_toggle                       0x00001728   ARM Code      32  mcu_led.o(.text)
    mcu_led_blue_toggle                      0x00001748   ARM Code      32  mcu_led.o(.text)
    mcu_led_all_on                           0x00001768   ARM Code      36  mcu_led.o(.text)
    mcu_led_all_off                          0x0000178c   ARM Code      36  mcu_led.o(.text)
    mcu_led_all_toggle                       0x000017b0   ARM Code      72  mcu_led.o(.text)
    adci_init                                0x000017fc   ARM Code     200  adc_internal.o(.text)
    adci_convert_next                        0x000018c4   ARM Code     124  adc_internal.o(.text)
    adci_convert_all                         0x00001940   ARM Code     144  adc_internal.o(.text)
    adci_efilter_add                         0x000019d0   ARM Code      88  adc_internal.o(.text)
    adci_isr                                 0x00001a28   ARM Code     240  adc_internal.o(.text)
    adci_get_result                          0x00001b18   ARM Code      20  adc_internal.o(.text)
    adci_get_raw                             0x00001b2c   ARM Code      16  adc_internal.o(.text)
    adci_get_filter                          0x00001b3c   ARM Code      16  adc_internal.o(.text)
    mc_init                                  0x00001b58   ARM Code     332  motor_controller.o(.text)
    mc_set_target_current                    0x00001ca4   ARM Code      72  motor_controller.o(.text)
    mc_set_unsafe_target_current             0x00001cec   ARM Code      20  motor_controller.o(.text)
    mc_update_watchdog                       0x00001d00   ARM Code      72  motor_controller.o(.text)
    mc_set_pwm                               0x00001d48   ARM Code     384  motor_controller.o(.text)
    mc_pid_current                           0x00001ec8   ARM Code     856  motor_controller.o(.text)
    mc_compliant_control                     0x00002220   ARM Code     148  motor_controller.o(.text)
    mc_set_command_current                   0x000022b4   ARM Code      44  motor_controller.o(.text)
    mc_get_command_current                   0x000022e0   ARM Code      12  motor_controller.o(.text)
    mc_set_stiffness                         0x000022ec   ARM Code      28  motor_controller.o(.text)
    mc_get_stiffness                         0x00002308   ARM Code      12  motor_controller.o(.text)
    mc_set_kp                                0x00002314   ARM Code      64  motor_controller.o(.text)
    mc_set_ki                                0x00002354   ARM Code      80  motor_controller.o(.text)
    mc_set_dampness                          0x000023a4   ARM Code      28  motor_controller.o(.text)
    mc_get_dampness                          0x000023c0   ARM Code      12  motor_controller.o(.text)
    mc_direction_control                     0x000023cc   ARM Code      28  motor_controller.o(.text)
    mc_get_parameters                        0x000023e8   ARM Code       8  motor_controller.o(.text)
    mc_get_pwm                               0x000023f0   ARM Code      12  motor_controller.o(.text)
    mc_set_shutdown                          0x000023fc   ARM Code      20  motor_controller.o(.text)
    mc_set_sleep                             0x00002410   ARM Code      20  motor_controller.o(.text)
    mc_run_no_control                        0x00002424   ARM Code     152  motor_controller.o(.text)
    sendchar                                 0x000024bc   ARM Code      60  uart.o(.text)
    getkey                                   0x000024f8   ARM Code      28  uart.o(.text)
    uarti_tx_set_empty_callback              0x00002514   ARM Code      12  uart_int.o(.text)
    uarti_tx_refill                          0x00002520   ARM Code     108  uart_int.o(.text)
    uarti_tx_buf                             0x0000258c   ARM Code     160  uart_int.o(.text)
    uarti_isr                                0x0000262c   ARM Code     148  uart_int.o(.text)
    uarti_print_int2                         0x000026c0   ARM Code      64  uart_int.o(.text)
    uarti_print_int                          0x00002700   ARM Code      52  uart_int.o(.text)
    uarti_print_float                        0x00002734   ARM Code      64  uart_int.o(.text)
    uarti_print_2float                       0x00002774   ARM Code     100  uart_int.o(.text)
    adcx_register_write                      0x000027d8   ARM Code      40  adc_external.o(.text)
    adcx_convert_cfg                         0x00002800   ARM Code      72  adc_external.o(.text)
    adcx_convert_next                        0x00002848   ARM Code     132  adc_external.o(.text)
    adcx_register_read                       0x000028cc   ARM Code      56  adc_external.o(.text)
    adcx_read_buffer                         0x00002904   ARM Code      56  adc_external.o(.text)
    adcx_isr                                 0x0000293c   ARM Code     336  adc_external.o(.text)
    adcx_convert_all                         0x00002a8c   ARM Code     148  adc_external.o(.text)
    adcx_write                               0x00002b20   ARM Code      40  adc_external.o(.text)
    adcx_get_result                          0x00002b48   ARM Code      16  adc_external.o(.text)
    adcx_init                                0x00002b58   ARM Code     136  adc_external.o(.text)
    adcx_add_config                          0x00002be0   ARM Code      48  adc_external.o(.text)
    adcx_conversion_wait                     0x00002c10   ARM Code      52  adc_external.o(.text)
    can_init                                 0x00002c50   ARM Code      48  can.o(.text)
    can_tx1_push_frame                       0x00002c80   ARM Code      96  can.o(.text)
    can_tx1                                  0x00002ce0   ARM Code     340  can.o(.text)
    can_tx2_push_frame                       0x00002e34   ARM Code      96  can.o(.text)
    can_tx2                                  0x00002e94   ARM Code     352  can.o(.text)
    can_tx3_push_frame                       0x00002ff4   ARM Code      96  can.o(.text)
    can_tx3                                  0x00003054   ARM Code     352  can.o(.text)
    can_tx4_push_frame                       0x000031b4   ARM Code      96  can.o(.text)
    can_tx4                                  0x00003214   ARM Code     352  can.o(.text)
    can_tx_get_frame_count_1                 0x00003374   ARM Code      84  can.o(.text)
    can_tx_get_frame_count_2                 0x000033c8   ARM Code      84  can.o(.text)
    can_tx_get_frame_count_3                 0x0000341c   ARM Code     112  can.o(.text)
    can_tx_get_frame_count_4                 0x0000348c   ARM Code      84  can.o(.text)
    can_tx_set_chan_cfg                      0x000034e0   ARM Code      32  can.o(.text)
    can_transmit_frame                       0x00003500   ARM Code     404  can.o(.text)
    can_transmit_alt                         0x00003694   ARM Code     400  can.o(.text)
    can_transmit                             0x00003824   ARM Code      16  can.o(.text)
    can_rx_dispatch_frame                    0x00003834   ARM Code     400  can.o(.text)
    can_rx_pop_frame                         0x000039c4   ARM Code     232  can.o(.text)
    can_rx_dispatch_all                      0x00003aac   ARM Code     236  can.o(.text)
    can_rx1_isr                              0x00003b98   ARM Code      44  can.o(.text)
    can_rx2_isr                              0x00003bc4   ARM Code      44  can.o(.text)
    can_rx3_isr                              0x00003bf0   ARM Code      44  can.o(.text)
    can_rx4_isr                              0x00003c1c   ARM Code      44  can.o(.text)
    can_rx_get_frame_count_1                 0x00003c48   ARM Code      84  can.o(.text)
    can_rx_get_frame_count_2                 0x00003c9c   ARM Code      92  can.o(.text)
    can_rx_get_frame_count_3                 0x00003cf8   ARM Code      84  can.o(.text)
    can_rx_get_frame_count_4                 0x00003d4c   ARM Code      84  can.o(.text)
    can_rx_set_descriptors                   0x00003da0   ARM Code      16  can.o(.text)
    can_rx_set_chan_cfg                      0x00003db0   ARM Code      24  can.o(.text)
    can_get_error_1                          0x00003dc8   ARM Code      84  can.o(.text)
    can_get_error_2                          0x00003e1c   ARM Code      84  can.o(.text)
    can_get_error_3                          0x00003e70   ARM Code      84  can.o(.text)
    can_get_error_4                          0x00003ec4   ARM Code      84  can.o(.text)
    can_error_isr                            0x00003f18   ARM Code     200  can.o(.text)
    can_rx_setter_double_dummy               0x00003fe4   ARM Code       4  can_types.o(.text)
    can_rx_setter_float_dummy                0x00003fe8   ARM Code       4  can_types.o(.text)
    can_rx_setter_int_dummy                  0x00003fec   ARM Code       4  can_types.o(.text)
    can_rx_setter_short_dummy                0x00003ff0   ARM Code       4  can_types.o(.text)
    can_tx_getter_double_dummy               0x00003ff4   ARM Code      20  can_types.o(.text)
    can_tx_getter_float_dummy                0x00004008   ARM Code       8  can_types.o(.text)
    can_tx_getter_int_dummy                  0x00004010   ARM Code       8  can_types.o(.text)
    can_tx_getter_short_dummy                0x00004018   ARM Code       8  can_types.o(.text)
    can_set_tx_descriptor_d                  0x00004020   ARM Code      52  can_types.o(.text)
    can_set_tx_descriptor_ff                 0x00004054   ARM Code      72  can_types.o(.text)
    can_set_tx_descriptor_ii                 0x0000409c   ARM Code      72  can_types.o(.text)
    can_set_tx_descriptor_fi                 0x000040e4   ARM Code      72  can_types.o(.text)
    can_set_tx_descriptor_iss                0x0000412c   ARM Code      80  can_types.o(.text)
    can_set_tx_descriptor_rtr                0x0000417c   ARM Code      44  can_types.o(.text)
    can_set_rx_descriptor_d                  0x000041a8   ARM Code      48  can_types.o(.text)
    can_set_rx_descriptor_ff                 0x000041d8   ARM Code      56  can_types.o(.text)
    can_set_rx_descriptor_ii                 0x00004210   ARM Code      56  can_types.o(.text)
    can_set_rx_descriptor_fi                 0x00004248   ARM Code      56  can_types.o(.text)
    can_set_rx_descriptor_iss                0x00004280   ARM Code      72  can_types.o(.text)
    __aeabi_fadd                             0x0000436c   ARM Code      16  fadd.o(.text)
    __aeabi_fsub                             0x0000437c   ARM Code      20  fadd.o(.text)
    __aeabi_frsub                            0x00004390   ARM Code      32  fadd.o(.text)
    __aeabi_fmul                             0x000043b0   ARM Code     136  fmul.o(.text)
    __aeabi_fdiv                             0x00004438   ARM Code     140  fdiv.o(.text)
    __ARM_scalbnf                            0x000044c4   ARM Code      12  fscalb.o(.text)
    scalbnf                                  0x000044c4   ARM Code       0  fscalb.o(.text)
    __aeabi_dmul                             0x000044d0   ARM Code     360  dmul.o(.text)
    __aeabi_i2f                              0x00004638   ARM Code      28  fflti.o(.text)
    __aeabi_ui2f                             0x00004654   ARM Code      16  ffltui.o(.text)
    __aeabi_f2iz                             0x00004664   ARM Code      64  ffixi.o(.text)
    __aeabi_f2d                              0x000046a4   ARM Code      56  f2d.o(.text)
    __aeabi_d2f                              0x000046dc   ARM Code      92  d2f.o(.text)
    __aeabi_uidiv                            0x00004738   ARM Code       0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00004738   ARM Code      60  uidiv.o(.text)
    __aeabi_uldivmod                         0x00004774   ARM Code     144  uldiv.o(.text)
    __I$use$fp                               0x00004804   ARM Code       0  iusefp.o(.text)
    _float_round                             0x00004804   ARM Code      24  fepilogue.o(.text)
    _float_epilogue                          0x0000481c   ARM Code      84  fepilogue.o(.text)
    _double_round                            0x00004870   ARM Code      84  depilogue.o(.text)
    _double_epilogue                         0x000048c4   ARM Code     204  depilogue.o(.text)
    __aeabi_dadd                             0x00004b40   ARM Code      80  dadd.o(.text)
    __aeabi_dsub                             0x00004b90   ARM Code      80  dadd.o(.text)
    __aeabi_drsub                            0x00004be0   ARM Code      80  dadd.o(.text)
    __aeabi_ddiv                             0x00004c30   ARM Code     380  ddiv.o(.text)
    __aeabi_d2ulz                            0x00004dac   ARM Code      68  dfixul.o(.text)
    __aeabi_cdrcmple                         0x00004df8   ARM Code     112  cdrcmple.o(.text)
    __scatterload                            0x00004e68   ARM Code      40  init.o(.text)
    __scatterload_rt2                        0x00004e68   ARM Code       0  init.o(.text)
    __aeabi_llsl                             0x00004e98   ARM Code      40  llshl.o(.text)
    _ll_shift_l                              0x00004e98   ARM Code       0  llshl.o(.text)
    __aeabi_llsr                             0x00004ec0   ARM Code      36  llushr.o(.text)
    _ll_ushift_r                             0x00004ec0   ARM Code       0  llushr.o(.text)
    __decompress                             0x00004ee4   ARM Code       0  __dczerorl2.o(.text)
    __decompress1                            0x00004ee4   ARM Code     112  __dczerorl2.o(.text)
    __0printf                                0x00004f54   ARM Code      36  printfa.o(i.__0printf)
    __1printf                                0x00004f54   ARM Code       0  printfa.o(i.__0printf)
    __2printf                                0x00004f54   ARM Code       0  printfa.o(i.__0printf)
    __c89printf                              0x00004f54   ARM Code       0  printfa.o(i.__0printf)
    printf                                   0x00004f54   ARM Code       0  printfa.o(i.__0printf)
    __0sprintf                               0x00004f80   ARM Code      56  printfa.o(i.__0sprintf)
    __1sprintf                               0x00004f80   ARM Code       0  printfa.o(i.__0sprintf)
    __2sprintf                               0x00004f80   ARM Code       0  printfa.o(i.__0sprintf)
    __c89sprintf                             0x00004f80   ARM Code       0  printfa.o(i.__0sprintf)
    sprintf                                  0x00004f80   ARM Code       0  printfa.o(i.__0sprintf)
    __ARM_common_memcpy1_8_arm               0x00004fbc   ARM Code      68  can.o(i.__ARM_common_memcpy1_8_arm)
    __scatterload_copy                       0x00005000   ARM Code      24  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00005018   ARM Code       4  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x0000501c   ARM Code      24  handlers.o(i.__scatterload_zeroinit)
    main_schedule                            0x00005de4   Data          68  software_setup.o(.constdata)
    Region$$Table$$Base                      0x00005e28   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005e48   Number         0  anon$$obj.o(Region$$Table)
    global_running                           0x40000000   Data           4  main.o(.data)
    er_mutex                                 0x40000038   Data           4  error.o(.data)
    er_irq_mutex                             0x4000003c   Data           4  error.o(.data)
    er_fiq_mutex                             0x40000040   Data           4  error.o(.data)
    tt_time                                  0x40000044   Data           4  utility.o(.data)
    tt_print                                 0x40000048   Data           4  utility.o(.data)
    bv_offset                                0x40000050   Data           4  data_nexus.o(.data)
    bv_gain                                  0x40000054   Data           4  data_nexus.o(.data)
    mcurr_offset                             0x40000058   Data           4  data_nexus.o(.data)
    mcurr_coeff                              0x4000005c   Data           4  data_nexus.o(.data)
    bc_offset                                0x40000060   Data           4  data_nexus.o(.data)
    bc_coeff                                 0x40000064   Data           4  data_nexus.o(.data)
    dn_steer_zero_offset                     0x40000068   Data           4  data_nexus.o(.data)
    dn_ticks_to_ms                           0x40000070   Data           4  data_nexus.o(.data)
    dn_execution_ticks                       0x40000074   Data           4  data_nexus.o(.data)
    dn_max_execution_ticks                   0x40000078   Data           4  data_nexus.o(.data)
    str_length                               0x40000080   Data           4  data_nexus.o(.data)
    __stdout                                 0x40000084   Data           4  retarget.o(.data)
    can_tx_frame_count_1                     0x40000144   Data           2  can.o(.data)
    can_tx_frame_count_2                     0x40000146   Data           2  can.o(.data)
    can_tx_frame_count_3                     0x40000148   Data           2  can.o(.data)
    can_tx_frame_count_4                     0x4000014a   Data           2  can.o(.data)
    can1_tx_index1                           0x4000014c   Data           2  can.o(.data)
    can1_tx_index2                           0x4000014e   Data           2  can.o(.data)
    can2_tx_index1                           0x40000150   Data           2  can.o(.data)
    can2_tx_index2                           0x40000152   Data           2  can.o(.data)
    can3_tx_index1                           0x40000154   Data           2  can.o(.data)
    can3_tx_index2                           0x40000156   Data           2  can.o(.data)
    can4_tx_index1                           0x40000158   Data           2  can.o(.data)
    can4_tx_index2                           0x4000015a   Data           2  can.o(.data)
    can_rx_frame_count_1                     0x4000015c   Data           2  can.o(.data)
    can_rx_frame_count_2                     0x4000015e   Data           2  can.o(.data)
    can_rx_frame_count_3                     0x40000160   Data           2  can.o(.data)
    can_rx_frame_count_4                     0x40000162   Data           2  can.o(.data)
    can_elapsed_ms                           0x40000164   Data           4  can.o(.data)
    can_error_1                              0x40000168   Data           4  can.o(.data)
    can_error_2                              0x4000016c   Data           4  can.o(.data)
    can_error_3                              0x40000170   Data           4  can.o(.data)
    can_error_4                              0x40000174   Data           4  can.o(.data)
    can_rx_descriptors                       0x40000178   Data           4  can.o(.data)
    can_rx_rtr_descriptors                   0x4000017c   Data           4  can.o(.data)
    rxlist                                   0x40000398   Data          60  can_setup.o(.bss)
    rtrlist                                  0x400003d4   Data          40  can_setup.o(.bss)
    tx_fd_error                              0x400003fc   Data          40  can_setup.o(.bss)
    tx_fd_motor_current                      0x40000424   Data          40  can_setup.o(.bss)
    tx_fd_angle                              0x4000044c   Data          40  can_setup.o(.bss)
    tx_fd_battery_power                      0x40000474   Data          40  can_setup.o(.bss)
    tx_fd_status                             0x4000049c   Data          40  can_setup.o(.bss)
    tx_fd_exec_time                          0x400004c4   Data          40  can_setup.o(.bss)
    tx_fd_max_exec_time                      0x400004ec   Data          40  can_setup.o(.bss)
    rx_fd_timestamp                          0x40000514   Data          40  can_setup.o(.bss)
    rx_fd_motor_current                      0x4000053c   Data          40  can_setup.o(.bss)
    rx_fd_mc_shutdown                        0x40000564   Data          40  can_setup.o(.bss)
    rx_fd_mc_sleep                           0x4000058c   Data          40  can_setup.o(.bss)
    rx_fd_mc_stiffness                       0x400005b4   Data          40  can_setup.o(.bss)
    rx_fd_mc_command_current                 0x400005dc   Data          40  can_setup.o(.bss)
    rx_fd_mc_dampness                        0x40000604   Data          40  can_setup.o(.bss)
    string                                   0x4000062c   Data          40  data_nexus.o(.bss)
    can_tx_chan_cfgs                         0x40000784   Data          60  can.o(.bss)
    can1_tx_buffer                           0x400007c0   Data          96  can.o(.bss)
    can2_tx_buffer                           0x40000820   Data          96  can.o(.bss)
    can3_tx_buffer                           0x40000880   Data          96  can.o(.bss)
    can4_tx_buffer                           0x400008e0   Data          96  can.o(.bss)
    can_rx_chan_cfgs                         0x40000940   Data          80  can.o(.bss)
    can_rx_buffer                            0x40000990   Data        1024  can.o(.bss)
    can_rx_data                              0x40000d90   Data          20  can.o(.bss)
    __initial_sp                             0x400011a8   Data        1032  startup.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000114

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00005fc8, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00005e90])

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00005e48, Max: 0x00040000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000114   Code   RO          149    RESET               startup.o
    0x00000114   0x00000000   Code   RO          447  * .ARM.Collect$$$$00000000  entry.o(mc_4.l)
    0x00000114   0x00000004   Code   RO          731    .ARM.Collect$$$$00000001  entry2.o(mc_4.l)
    0x00000118   0x00000004   Code   RO          733    .ARM.Collect$$$$00000004  entry5.o(mc_4.l)
    0x0000011c   0x0000000c   Code   RO          734    .ARM.Collect$$$$00000007  entry7.o(mc_4.l)
    0x00000128   0x00000004   Code   RO          732    .ARM.Collect$$$$00002712  entry2.o(mc_4.l)
    0x0000012c   0x0000004c   Code   RO          412    .emb_text           can.o
    0x00000178   0x00000078   Code   RO            1    .text               main.o
    0x000001f0   0x00000138   Code   RO          153    .text               async_scheduler.o
    0x00000328   0x00000400   Code   RO          167    .text               error.o
    0x00000728   0x0000002c   Code   RO          183    .text               mutex.o
    0x00000754   0x0000014c   Code   RO          196    .text               utility.o
    0x000008a0   0x00000468   Code   RO          212    .text               hardware_setup.o
    0x00000d08   0x000001d0   Code   RO          224    .text               software_setup.o
    0x00000ed8   0x00000264   Code   RO          241    .text               can_setup.o
    0x0000113c   0x000000b4   Code   RO          256    .text               interrupts.o
    0x000011f0   0x0000030c   Code   RO          268    .text               data_nexus.o
    0x000014fc   0x00000014   Code   RO          285    .text               retarget.o
    0x00001510   0x0000008c   Code   RO          307    .text               heartbeat.o
    0x0000159c   0x00000260   Code   RO          321    .text               mcu_led.o
    0x000017fc   0x0000035c   Code   RO          336    .text               adc_internal.o
    0x00001b58   0x00000964   Code   RO          352    .text               motor_controller.o
    0x000024bc   0x00000058   Code   RO          368    .text               uart.o
    0x00002514   0x000002c4   Code   RO          380    .text               uart_int.o
    0x000027d8   0x00000478   Code   RO          396    .text               adc_external.o
    0x00002c50   0x00001394   Code   RO          413    .text               can.o
    0x00003fe4   0x000002e4   Code   RO          435    .text               can_types.o
    0x000042c8   0x000000e8   Code   RO          711    .text               fadd.o(mf_4.l)
    0x000043b0   0x00000088   Code   RO          713    .text               fmul.o(mf_4.l)
    0x00004438   0x0000008c   Code   RO          715    .text               fdiv.o(mf_4.l)
    0x000044c4   0x0000000c   Code   RO          717    .text               fscalb.o(mf_4.l)
    0x000044d0   0x00000168   Code   RO          719    .text               dmul.o(mf_4.l)
    0x00004638   0x0000001c   Code   RO          721    .text               fflti.o(mf_4.l)
    0x00004654   0x00000010   Code   RO          723    .text               ffltui.o(mf_4.l)
    0x00004664   0x00000040   Code   RO          725    .text               ffixi.o(mf_4.l)
    0x000046a4   0x00000038   Code   RO          727    .text               f2d.o(mf_4.l)
    0x000046dc   0x0000005c   Code   RO          729    .text               d2f.o(mf_4.l)
    0x00004738   0x0000003c   Code   RO          735    .text               uidiv.o(mc_4.l)
    0x00004774   0x00000090   Code   RO          737    .text               uldiv.o(mc_4.l)
    0x00004804   0x00000000   Code   RO          739    .text               iusefp.o(mc_4.l)
    0x00004804   0x0000006c   Code   RO          740    .text               fepilogue.o(mf_4.l)
    0x00004870   0x00000124   Code   RO          742    .text               depilogue.o(mf_4.l)
    0x00004994   0x0000029c   Code   RO          744    .text               dadd.o(mf_4.l)
    0x00004c30   0x0000017c   Code   RO          746    .text               ddiv.o(mf_4.l)
    0x00004dac   0x0000004c   Code   RO          748    .text               dfixul.o(mf_4.l)
    0x00004df8   0x00000070   Code   RO          750    .text               cdrcmple.o(mf_4.l)
    0x00004e68   0x00000030   Code   RO          752    .text               init.o(mc_4.l)
    0x00004e98   0x00000028   Code   RO          754    .text               llshl.o(mc_4.l)
    0x00004ec0   0x00000024   Code   RO          756    .text               llushr.o(mc_4.l)
    0x00004ee4   0x00000070   Code   RO          766    .text               __dczerorl2.o(mc_4.l)
    0x00004f54   0x0000002c   Code   RO          683    i.__0printf         printfa.o(mc_4.l)
    0x00004f80   0x0000003c   Code   RO          685    i.__0sprintf        printfa.o(mc_4.l)
    0x00004fbc   0x00000044   Code   RO          429    i.__ARM_common_memcpy1_8_arm  can.o
    0x00005000   0x00000018   Code   RO          760    i.__scatterload_copy  handlers.o(mc_4.l)
    0x00005018   0x00000004   Code   RO          761    i.__scatterload_null  handlers.o(mc_4.l)
    0x0000501c   0x00000018   Code   RO          762    i.__scatterload_zeroinit  handlers.o(mc_4.l)
    0x00005034   0x00000264   Code   RO          690    i._fp_digits        printfa.o(mc_4.l)
    0x00005298   0x00000aa4   Code   RO          691    i._printf_core      printfa.o(mc_4.l)
    0x00005d3c   0x00000044   Code   RO          692    i._printf_post_padding  printfa.o(mc_4.l)
    0x00005d80   0x00000050   Code   RO          693    i._printf_pre_padding  printfa.o(mc_4.l)
    0x00005dd0   0x00000014   Code   RO          695    i._sputc            printfa.o(mc_4.l)
    0x00005de4   0x00000044   Data   RO          225    .constdata          software_setup.o
    0x00005e28   0x00000020   Data   RO          758    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x40000000, Size: 0x000015b0, Max: 0x00003000, ABSOLUTE, COMPRESSED[0x00000048])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x00000004   Data   RW            2    .data               main.o
    0x40000004   0x00000020   Data   RW          154    .data               async_scheduler.o
    0x40000024   0x00000020   Data   RW          169    .data               error.o
    0x40000044   0x00000008   Data   RW          197    .data               utility.o
    0x4000004c   0x00000002   Data   RW          226    .data               software_setup.o
    0x4000004e   0x00000002   PAD
    0x40000050   0x00000034   Data   RW          270    .data               data_nexus.o
    0x40000084   0x00000004   Data   RW          286    .data               retarget.o
    0x40000088   0x00000018   Data   RW          308    .data               heartbeat.o
    0x400000a0   0x0000000c   Data   RW          322    .data               mcu_led.o
    0x400000ac   0x00000010   Data   RW          338    .data               adc_internal.o
    0x400000bc   0x0000005c   Data   RW          354    .data               motor_controller.o
    0x40000118   0x00000018   Data   RW          382    .data               uart_int.o
    0x40000130   0x00000014   Data   RW          398    .data               adc_external.o
    0x40000144   0x0000003c   Data   RW          415    .data               can.o
    0x40000180   0x00000218   Zero   RW          168    .bss                error.o
    0x40000398   0x00000294   Zero   RW          242    .bss                can_setup.o
    0x4000062c   0x00000028   Zero   RW          269    .bss                data_nexus.o
    0x40000654   0x00000030   Zero   RW          337    .bss                adc_internal.o
    0x40000684   0x0000005c   Zero   RW          353    .bss                motor_controller.o
    0x400006e0   0x00000064   Zero   RW          381    .bss                uart_int.o
    0x40000744   0x00000040   Zero   RW          397    .bss                adc_external.o
    0x40000784   0x00000620   Zero   RW          414    .bss                can.o
    0x40000da4   0x00000004   PAD
    0x40000da8   0x00000808   Zero   RW          147    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1144         12          0         20         64       5091   adc_external.o
       860         12          0         16         48       3800   adc_internal.o
       312          4          0         32          0       2591   async_scheduler.o
      5156         84          0         60       1568      13785   can.o
       612        100          0          0        660       2594   can_setup.o
       740          8          0          0          0       5308   can_types.o
       780         32          0         52         40       5607   data_nexus.o
      1024         24          0         32        536       4707   error.o
      1128          4          0          0          0       1119   hardware_setup.o
       140          4          0         24          0       2139   heartbeat.o
       180         20          0          0          0        658   interrupts.o
       120         20          0          4          0      14756   main.o
       608          4          0         12          0       3970   mcu_led.o
      2404         12          0         92         92       8990   motor_controller.o
        44          0          0          0          0       1508   mutex.o
        20          0          0          4          0       2644   retarget.o
       464         48         68          2          0       1771   software_setup.o
       276         52          0          0       2056        360   startup.o
        88          0          0          0          0        794   uart.o
       708         44          0         24        100       3549   uart_int.o
       332          4          0          8          0       4426   utility.o

    ----------------------------------------------------------------------
     17140        488        100        384       5168      90167   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          2          4          1   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       112          0          0          0          0          0   __dczerorl2.o
       112          0          0          0          0         68   cdrcmple.o
        92          0          0          0          0         96   d2f.o
       668          0          0          0          0        180   dadd.o
       380          0          0          0          0         96   ddiv.o
       292          4          0          0          0        136   depilogue.o
        76          8          0          0          0         68   dfixul.o
       360          0          0          0          0         96   dmul.o
         0          0          0          0          0          0   entry.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
        12          4          0          0          0          0   entry7.o
        56          0          0          0          0         68   f2d.o
       232          0          0          0          0        128   fadd.o
       140          0          0          0          0         80   fdiv.o
       108          0          0          0          0        132   fepilogue.o
        64          0          0          0          0         68   ffixi.o
        28          0          0          0          0         68   fflti.o
        16          0          0          0          0         68   ffltui.o
       136          0          0          0          0         68   fmul.o
        12          0          0          0          0         68   fscalb.o
        52          0          0          0          0          0   handlers.o
        48          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        40          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llushr.o
      3608        108          0          0          0        592   printfa.o
        60          0          0          0          0         72   uidiv.o
       144          0          0          0          0         88   uldiv.o

    ----------------------------------------------------------------------
      6896        136          0          0          0       2444   Library Totals
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      4124        124          0          0          0        956   mc_4.l
      2772         12          0          0          0       1488   mf_4.l

    ----------------------------------------------------------------------
      6896        136          0          0          0       2444   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     24036        624        100        384       5168      88612   Grand Totals
     24036        624        100         72       5168      88612   ELF Image Totals (compressed)
     24036        624        100         72          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                24136 (  23.57kB)
    Total RW  Size (RW Data + ZI Data)              5552 (   5.42kB)
    Total ROM Size (Code + RO Data + RW Data)      24208 (  23.64kB)

==============================================================================

